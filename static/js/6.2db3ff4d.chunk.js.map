{"version":3,"sources":["components/InlinedText.jsx","components/Chart.jsx","components/Members.jsx","components/ConversationStats.jsx","pages/ConversationPage.jsx"],"names":["InlinedText","_this$props","this","props","leftText","rightText","align","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","flexContainer","_material_ui_core_Typography_Typography__WEBPACK_IMPORTED_MODULE_6___default","variant","React","PureComponent","defaultProps","withStyles","theme","display","alignItems","justifyContent","flexShrink","paddingRight","spacing","unit","Chart","state","chartType","_this","defaultChart","getColors","size","availableColors","chartColors","i","push","length","getFormattedDataWithRainbowColors","labels","data","keys","datasets","label","backgroundColor","fill","values","getFormattedDataWithOneColor","palette","secondary","main","borderColor","pointBackgroundColor","pointBorderColor","pointBorderWidth","handleChartTypeChange","event","setState","target","value","getChart","react_chartjs_2__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Grid_Grid__WEBPACK_IMPORTED_MODULE_11___default","container","item","xs","_material_ui_core_Typography_Typography__WEBPACK_IMPORTED_MODULE_15___default","gutterBottom","title","_material_ui_core_FormControl_FormControl__WEBPACK_IMPORTED_MODULE_7___default","fullWidth","_material_ui_core_InputLabel_InputLabel__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Select_Select__WEBPACK_IMPORTED_MODULE_9___default","onChange","_material_ui_core_MenuItem_MenuItem__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Paper_Paper__WEBPACK_IMPORTED_MODULE_14___default","paper","withTheme","paddingTop","Members","react_default","Grid_default","Typography_default","users","sort","u1","u2","userName","localeCompare","map","user","sm","md","lg","xl","key","Paper_default","flex","component","Link","to","pathname","encodeURI","concat","location","conversationData","textDecorationNone","IconButton_default","icon","ChevronRight_default","usersName","withStyle","flexWrap","flexGrow","padding","marginLeft","textDecoration","withRouter","mixins","gutters","paddingBottom","firstMessageDate","lastMessageDate","conversationDuration","formatNumber","totalMessages","totalChars","totalPhotos","totalVideos","totalShares","totalStickers","ConversationPage","undefined","match","Parser","getConversationData","params","conversationID","Slide_default","in","direction","mountOnEnter","unmountOnExit","Toolbar_default","menuButton","ArrowBack_default","color","conversationName","components_Members","components_ConversationStats","messageCountPerUser","charCountPerUser","messagesPerMonth","marginRight"],"mappings":"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","file":"static/js/6.2db3ff4d.chunk.js","sourcesContent":["/*\r\n * Lucy - Messenger statistics\r\n * Copyright (C) 2018 Vincent M\r\n *\r\n *     This program is free software: you can redistribute it and/or modify\r\n *     it under the terms of the GNU General Public License as published by\r\n *     the Free Software Foundation, either version 3 of the License, or\r\n *     (at your option) any later version.\r\n *\r\n *     This program is distributed in the hope that it will be useful,\r\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *     GNU General Public License for more details.\r\n *\r\n *     You should have received a copy of the GNU General Public License\r\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nclass InlinedText extends React.PureComponent {\r\n  render() {\r\n    const { leftText, rightText, align, classes } = this.props;\r\n    return (\r\n      <div className={classes.flexContainer}>\r\n        <Typography\r\n          align={align}\r\n          variant=\"subtitle2\"\r\n          className={classes.leftText}>\r\n          {leftText}\r\n          &nbsp;:\r\n        </Typography>\r\n        <Typography\r\n          align={align}\r\n          variant=\"subtitle1\"\r\n          className={classes.rightText}>\r\n          {rightText}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  leftText: {\r\n    flexShrink: 1,\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  rightText: {\r\n    flexShrink: 2\r\n  }\r\n});\r\n\r\nInlinedText.defaultProps = {\r\n  rightText: \"\",\r\n  align: \"left\"\r\n};\r\n\r\nInlinedText.propTypes = {\r\n  leftText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\r\n  rightText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  align: PropTypes.string,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(InlinedText);\r\n","/*\r\n * Lucy - Messenger statistics\r\n * Copyright (C) 2018 Vincent M\r\n *\r\n *     This program is free software: you can redistribute it and/or modify\r\n *     it under the terms of the GNU General Public License as published by\r\n *     the Free Software Foundation, either version 3 of the License, or\r\n *     (at your option) any later version.\r\n *\r\n *     This program is distributed in the hope that it will be useful,\r\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *     GNU General Public License for more details.\r\n *\r\n *     You should have received a copy of the GNU General Public License\r\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Bar,\r\n  Doughnut,\r\n  HorizontalBar,\r\n  Line,\r\n  Polar,\r\n  Radar\r\n} from \"react-chartjs-2\";\r\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\nimport Select from \"@material-ui/core/Select/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport withTheme from \"@material-ui/core/styles/withTheme\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\n\r\nclass Chart extends React.PureComponent {\r\n  state = {\r\n    chartType: this.props.defaultChart\r\n  };\r\n\r\n  getColors = size => {\r\n    const availableColors = [\r\n      \"rgb(194, 24, 91)\",\r\n      \"rgb(186, 104, 200)\",\r\n      \"rgb(0, 151, 167)\",\r\n      \"rgb(0, 200, 83)\",\r\n      \"rgb(255, 234, 0)\",\r\n      \"rgb(255, 183, 77)\"\r\n    ];\r\n    const chartColors = [];\r\n    for (let i = 0; i < size; i++) {\r\n      chartColors.push(availableColors[i % availableColors.length]);\r\n    }\r\n    return chartColors;\r\n  };\r\n\r\n  getFormattedDataWithRainbowColors = () => ({\r\n    labels: this.props.data.keys,\r\n    datasets: [\r\n      {\r\n        label: this.props.label,\r\n        backgroundColor: this.getColors(this.props.data.size),\r\n        fill: false,\r\n        data: this.props.data.values\r\n      }\r\n    ]\r\n  });\r\n\r\n  getFormattedDataWithOneColor = () => ({\r\n    labels: this.props.data.keys,\r\n    datasets: [\r\n      {\r\n        label: this.props.label,\r\n        backgroundColor: this.props.theme.palette.secondary.main,\r\n        borderColor: this.props.theme.palette.secondary.main,\r\n        pointBackgroundColor: this.props.theme.palette.secondary.main,\r\n        pointBorderColor: this.props.theme.palette.secondary.main,\r\n        pointBorderWidth: 3,\r\n        fill: false,\r\n        data: this.props.data.values\r\n      }\r\n    ]\r\n  });\r\n\r\n  handleChartTypeChange = event =>\r\n    this.setState({ chartType: event.target.value });\r\n\r\n  getChart = () => {\r\n    switch (this.state.chartType) {\r\n      case \"bar\":\r\n        return <Bar data={this.getFormattedDataWithRainbowColors} />;\r\n      case \"horizontalBar\":\r\n        return <HorizontalBar data={this.getFormattedDataWithRainbowColors} />;\r\n      case \"line\":\r\n        return <Line data={this.getFormattedDataWithOneColor} />;\r\n      case \"donut\":\r\n        return <Doughnut data={this.getFormattedDataWithRainbowColors} />;\r\n      case \"polar\":\r\n        return <Polar data={this.getFormattedDataWithRainbowColors} />;\r\n      case \"radar\":\r\n        return <Radar data={this.getFormattedDataWithOneColor} />;\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={8}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {this.props.title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Type de graphique</InputLabel>\r\n            <Select\r\n              value={this.state.chartType}\r\n              onChange={this.handleChartTypeChange}>\r\n              <MenuItem value=\"bar\">Histogramme</MenuItem>\r\n              <MenuItem value=\"horizontalBar\">Histogramme horizontal</MenuItem>\r\n              <MenuItem value=\"line\">Courbe</MenuItem>\r\n              <MenuItem value=\"donut\">Donut</MenuItem>\r\n              <MenuItem value=\"polar\">Aire polaire</MenuItem>\r\n              <MenuItem value=\"radar\">Radar</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={this.props.classes.paper}>{this.getChart()}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    paddingTop: theme.spacing.unit * 1\r\n  }\r\n});\r\n\r\nChart.defaultProps = {\r\n  defaultChart: \"horizontalBar\",\r\n  label: \"\",\r\n  title: \"\"\r\n};\r\n\r\nChart.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  defaultChart: PropTypes.oneOf([\r\n    \"bar\",\r\n    \"horizontalBar\",\r\n    \"line\",\r\n    \"donut\",\r\n    \"polar\",\r\n    \"radar\"\r\n  ]),\r\n  label: PropTypes.string,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default withTheme()(withStyles(styles)(Chart));\r\n","/*\r\n * Lucy - Messenger statistics\r\n * Copyright (C) 2018 Vincent M\r\n *\r\n *     This program is free software: you can redistribute it and/or modify\r\n *     it under the terms of the GNU General Public License as published by\r\n *     the Free Software Foundation, either version 3 of the License, or\r\n *     (at your option) any later version.\r\n *\r\n *     This program is distributed in the hope that it will be useful,\r\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *     GNU General Public License for more details.\r\n *\r\n *     You should have received a copy of the GNU General Public License\r\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport withStyle from \"@material-ui/core/styles/withStyles\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\n\r\nconst Members = props => (\r\n  <Grid container spacing={16}>\r\n    <Grid item xs={12}>\r\n      <Typography variant=\"h5\">\r\n        Membres de la conversation ({props.users.length})\r\n      </Typography>\r\n    </Grid>\r\n    {props.users\r\n      .sort((u1, u2) => u1.userName.localeCompare(u2.userName))\r\n      .map(user => (\r\n        <Grid item xs={6} sm={4} md={3} lg={2} xl={1} key={user.userName}>\r\n          <Paper className={props.classes.paper}>\r\n            <div className={props.classes.flexContainer}>\r\n              <div className={props.classes.flex}>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  component={Link}\r\n                  to={{\r\n                    pathname: encodeURI(\r\n                      `${props.location.pathname}/${user.userName}`\r\n                    ),\r\n                    conversationData: props.conversationData,\r\n                    user\r\n                  }}\r\n                  className={props.classes.textDecorationNone}>\r\n                  {user.userName}\r\n                </Typography>\r\n              </div>\r\n              <div>\r\n                <IconButton\r\n                  className={props.classes.icon}\r\n                  size=\"small\"\r\n                  component={Link}\r\n                  to={{\r\n                    pathname: encodeURI(\r\n                      `${props.location.pathname}/${user.userName}`\r\n                    ),\r\n                    conversationData: props.conversationData,\r\n                    user\r\n                  }}>\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n  </Grid>\r\n);\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit\r\n  },\r\n  textDecorationNone: {\r\n    textDecoration: \"none\"\r\n  }\r\n});\r\n\r\nMembers.defaultProps = {\r\n  usersName: []\r\n};\r\n\r\nMembers.propTypes = {\r\n  conversationID: PropTypes.string.isRequired,\r\n  users: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default withStyle(styles)(withRouter(Members));\r\n","/*\r\n * Lucy - Messenger statistics\r\n * Copyright (C) 2018 Vincent M\r\n *\r\n *     This program is free software: you can redistribute it and/or modify\r\n *     it under the terms of the GNU General Public License as published by\r\n *     the Free Software Foundation, either version 3 of the License, or\r\n *     (at your option) any later version.\r\n *\r\n *     This program is distributed in the hope that it will be useful,\r\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *     GNU General Public License for more details.\r\n *\r\n *     You should have received a copy of the GNU General Public License\r\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport { formatNumber } from \"../utils/Formats\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport InlinedText from \"./InlinedText\";\r\n\r\nconst ConversationStats = props => {\r\n  return (\r\n    <Paper className={props.classes.paper}>\r\n      <Typography variant=\"h6\" align=\"left\" gutterBottom>\r\n        Statistiques\r\n      </Typography>\r\n      <InlinedText\r\n        leftText=\"Date du premier message\"\r\n        rightText={props.firstMessageDate}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Date du dernier message\"\r\n        rightText={props.lastMessageDate}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Durée de la conversation\"\r\n        rightText={props.conversationDuration}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Nombre total de messages\"\r\n        rightText={formatNumber(props.totalMessages)}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Nombre total de caractères\"\r\n        rightText={formatNumber(props.totalChars)}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Nombre de photos envoyées\"\r\n        rightText={props.totalPhotos}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Nombre de vidéos envoyées\"\r\n        rightText={props.totalVideos}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Nombre de liens envoyés\"\r\n        rightText={props.totalShares}\r\n      />\r\n      <InlinedText\r\n        leftText=\"Nombre de stickers envoyés\"\r\n        rightText={props.totalStickers}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst styles = theme => ({\r\n  paper: theme.mixins.gutters({\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2\r\n  })\r\n});\r\n\r\nConversationStats.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  totalMessages: PropTypes.number.isRequired,\r\n  totalChars: PropTypes.number.isRequired,\r\n  totalPhotos: PropTypes.number.isRequired,\r\n  totalStickers: PropTypes.number.isRequired,\r\n  totalVideos: PropTypes.number.isRequired,\r\n  totalShares: PropTypes.number.isRequired,\r\n  firstMessageDate: PropTypes.string.isRequired,\r\n  lastMessageDate: PropTypes.string.isRequired,\r\n  conversationDuration: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ConversationStats);\r\n","/*\r\n * Lucy - Messenger statistics\r\n * Copyright (C) 2018 Vincent M\r\n *\r\n *     This program is free software: you can redistribute it and/or modify\r\n *     it under the terms of the GNU General Public License as published by\r\n *     the Free Software Foundation, either version 3 of the License, or\r\n *     (at your option) any later version.\r\n *\r\n *     This program is distributed in the hope that it will be useful,\r\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *     GNU General Public License for more details.\r\n *\r\n *     You should have received a copy of the GNU General Public License\r\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport Parser from \"../utils/Parser\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\nimport Chart from \"../components/Chart\";\r\nimport Members from \"../components/Members\";\r\nimport Slide from \"@material-ui/core/Slide/Slide\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ConversationStats from \"../components/ConversationStats.jsx\";\r\n\r\nclass ConversationPage extends React.PureComponent {\r\n  state = {\r\n    conversationData: undefined\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, match } = this.props;\r\n    if (location.conversationData) {\r\n      this.setState({ conversationData: location.conversationData });\r\n    } else {\r\n      this.setState({\r\n        conversationData: Parser.getConversationData(\r\n          match.params.conversationID\r\n        )\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { conversationData } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    if (!conversationData) return \"\";\r\n\r\n    return (\r\n      <Slide in direction=\"up\" mountOnEnter unmountOnExit>\r\n        <div>\r\n          <Grid container spacing={32}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Toolbar>\r\n                  <div className={classes.flexContainer}>\r\n                    <IconButton\r\n                      className={classes.menuButton}\r\n                      component={Link}\r\n                      to=\"/\">\r\n                      <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className={classes.flex}>\r\n                      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\">\r\n                        {conversationData.conversationName}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </Toolbar>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Members\r\n                users={conversationData.users}\r\n                conversationID={conversationData.conversationID}\r\n                conversationData={conversationData}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ConversationStats\r\n                totalMessages={conversationData.totalMessages}\r\n                totalChars={conversationData.totalChars}\r\n                firstMessageDate={conversationData.firstMessageDate}\r\n                lastMessageDate={conversationData.lastMessageDate}\r\n                conversationDuration={conversationData.conversationDuration}\r\n                totalPhotos={conversationData.totalPhotos}\r\n                totalStickers={conversationData.totalStickers}\r\n                totalVideos={conversationData.totalVideos}\r\n                totalShares={conversationData.totalShares}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Chart\r\n                data={conversationData.messageCountPerUser}\r\n                label=\"Nombre de messages\"\r\n                defaultChart=\"bar\"\r\n                title=\"Nombre de messages total\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Chart\r\n                data={conversationData.charCountPerUser}\r\n                label=\"Nombre de caractères\"\r\n                defaultChart=\"bar\"\r\n                title=\"Nombre de caractères total\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Chart\r\n                data={conversationData.messagesPerMonth}\r\n                label=\"Nombre de messages\"\r\n                defaultChart=\"line\"\r\n                title=\"Nombre de messages au cours du temps\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Slide>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit\r\n  },\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"noWrap\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// As we import pages asynchroneously, the IDE thinks the component is unused.\r\n// See AsyncComponent.jsx and AsyncContent.jsx for more details\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default withStyles(styles)(withRouter(ConversationPage));\r\n"],"sourceRoot":""}